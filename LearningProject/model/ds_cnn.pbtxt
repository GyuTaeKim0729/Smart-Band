node {
  name: "fingerprint_input"
  op: "Placeholder"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 192
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000\006\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0710669085383
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0710669085383
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "DS-CNN/conv_1/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_1/Conv2D"
  input: "DS-CNN/conv_1/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_1/BiasAdd"
  input: "DS-CNN/conv_1/batch_norm/Const"
  input: "DS-CNN/conv_1/batch_norm/beta/read"
  input: "DS-CNN/conv_1/batch_norm/Const_1"
  input: "DS-CNN/conv_1/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_1/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_1/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_1/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_1/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0710669085383
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0710669085383
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise/Shape"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_1/batch_norm/Relu"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.353553384542
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.353553384542
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_1/pw_conv/Conv2D"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_1/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise/Shape"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_2/pw_conv/Conv2D"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_2/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise/Shape"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_3/pw_conv/Conv2D"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_3/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0990147516131
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise/Shape"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise"
  op: "DepthwiseConv2dNative"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_4/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.43301269412
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/max"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/dilation_rate"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/Conv2D"
  op: "Conv2D"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/conv_ds_4/pw_conv/Conv2D"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/Initializer/ones"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const_1"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const_2"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "DS-CNN/conv_ds_4/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/read"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const_1"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/read"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/sub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0399999991059
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/read"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/sub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/decay"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Identity"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/AssignMovingAvg_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu"
  op: "Relu"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Identity"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "DS-CNN/avg_pool/AvgPool"
  op: "AvgPool"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 16
        i: 6
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "DS-CNN/SpatialSqueeze"
  op: "Squeeze"
  input: "DS-CNN/avg_pool/AvgPool"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.547722578049
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.547722578049
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/max"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/RandomUniform"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Initializer/random_uniform"
  op: "Add"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/mul"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Initializer/random_uniform"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/MatMul"
  op: "MatMul"
  input: "DS-CNN/SpatialSqueeze"
  input: "DS-CNN/fc1/weights/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "DS-CNN/fc1/BiasAdd"
  op: "BiasAdd"
  input: "DS-CNN/fc1/MatMul"
  input: "DS-CNN/fc1/biases/read"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  device: "/device:GPU:1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  op: "StopGradient"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  op: "Reshape"
  input: "DS-CNN/fc1/BiasAdd"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape_2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  op: "ConcatV2"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/values_0"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_1"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  op: "Sub"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Rank"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  op: "Pack"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  op: "Slice"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/begin"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  op: "Reshape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/Mean"
  op: "Mean"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  input: "cross_entropy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_1"
  input: "train/gradients/cross_entropy/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Shape_2"
  input: "train/gradients/cross_entropy/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/cross_entropy/Mean_grad/Prod_1"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Prod"
  input: "train/gradients/cross_entropy/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/cross_entropy/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/Mean_grad/Tile"
  input: "train/gradients/cross_entropy/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  op: "Shape"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/Mean_grad/truediv"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  op: "Neg"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  op: "Mul"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/mul_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  op: "Shape"
  input: "DS-CNN/fc1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  input: "DS-CNN/fc1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "DS-CNN/SpatialSqueeze"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
  input: "^train/gradients/DS-CNN/fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/fc1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/SpatialSqueeze_grad/Shape"
  op: "Shape"
  input: "DS-CNN/avg_pool/AvgPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/SpatialSqueeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/DS-CNN/SpatialSqueeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/Shape"
  input: "train/gradients/DS-CNN/SpatialSqueeze_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 16
        i: 6
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/avg_pool/AvgPool_grad/AvgPoolGrad"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_4/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_4/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_3/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_3/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_2/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_2/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_1/pw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/read"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/control_dependency"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_ds_1/dw_conv/BiasAdd"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/Const"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape"
  op: "Shape"
  input: "DS-CNN/conv_1/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/read"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "DS-CNN/conv_1/batch_norm/Relu"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/Shape_1"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency"
  input: "DS-CNN/conv_1/batch_norm/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/Relu_grad/ReluGrad"
  input: "DS-CNN/conv_1/BiasAdd"
  input: "DS-CNN/conv_1/batch_norm/Const"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:3"
  input: "DS-CNN/conv_1/batch_norm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000475
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "DS-CNN/conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN"
  input: "DS-CNN/conv_1/weights/read"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/ShapeN:1"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/DS-CNN/conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "DS-CNN/conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "DS-CNN/conv_1/weights/Adam/Initializer/zeros/Const"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "DS-CNN/conv_1/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "DS-CNN/conv_1/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_1/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros/Const"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros/Const"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 16
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "DS-CNN/fc1/weights/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/weights/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/fc1/weights/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases/Adam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/Initializer/zeros"
  op: "Const"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1"
  op: "VariableV2"
  device: "/device:GPU:1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/Assign"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "DS-CNN/fc1/biases/Adam_1/Initializer/zeros"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "DS-CNN/fc1/biases/Adam_1/read"
  op: "Identity"
  input: "DS-CNN/fc1/biases/Adam_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_1/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/depthwise_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pw_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pw_conv/weights"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pw_conv/biases"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_1/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/depthwise_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pw_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pw_conv/weights"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pw_conv/biases"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_2/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/depthwise_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pw_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pw_conv/weights"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pw_conv/biases"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_3/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/dw_conv/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/depthwise_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/dw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/dw_conv/biases"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/dw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/pw_conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/pw_conv/weights"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/Conv2D_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/pw_conv/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/pw_conv/biases"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/conv_ds_4/pw_conv/batch_norm/FusedBatchNorm_grad/tuple/control_dependency_2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/fc1/MatMul_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/DS-CNN/fc1/BiasAdd_grad/tuple/control_dependency_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/update"
  op: "NoOp"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
  input: "^train/Adam/update_DS-CNN/conv_1/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_1/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_2/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_3/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/dw_conv/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/conv_ds_4/pw_conv/weights/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/biases/ApplyAdam"
  input: "^train/Adam/update_DS-CNN/fc1/weights/ApplyAdam"
  device: "/device:GPU:1"
}
node {
  name: "train/Adam/value"
  op: "Const"
  input: "^train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "cross_entropy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train/train_op/control_dependency"
  op: "Identity"
  input: "train/train_op/CheckNumerics"
  input: "^train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/train_op/CheckNumerics"
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "DS-CNN/fc1/BiasAdd"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "groundtruth_input"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "ArgMax_1"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast"
  op: "Cast"
  input: "confusion_matrix/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax_1"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 108
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_1/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_1/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_1/biases"
        string_val: "DS-CNN/conv_1/biases/Adam"
        string_val: "DS-CNN/conv_1/biases/Adam_1"
        string_val: "DS-CNN/conv_1/weights"
        string_val: "DS-CNN/conv_1/weights/Adam"
        string_val: "DS-CNN/conv_1/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/fc1/biases"
        string_val: "DS-CNN/fc1/biases/Adam"
        string_val: "DS-CNN/fc1/biases/Adam_1"
        string_val: "DS-CNN/fc1/weights"
        string_val: "DS-CNN/fc1/weights/Adam"
        string_val: "DS-CNN/fc1/weights/Adam_1"
        string_val: "global_step"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 108
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "DS-CNN/conv_1/biases"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "DS-CNN/conv_1/weights"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_1/pw_conv/biases"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_1/pw_conv/weights"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_2/pw_conv/biases"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_2/pw_conv/weights"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_3/pw_conv/biases"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_3/pw_conv/weights"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/dw_conv/biases"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  input: "DS-CNN/conv_ds_4/pw_conv/biases"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  input: "DS-CNN/conv_ds_4/pw_conv/weights"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  input: "DS-CNN/fc1/biases"
  input: "DS-CNN/fc1/biases/Adam"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "DS-CNN/fc1/weights"
  input: "DS-CNN/fc1/weights/Adam"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "global_step"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 108
          }
        }
        string_val: "DS-CNN/conv_1/batch_norm/beta"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_1/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_1/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_1/biases"
        string_val: "DS-CNN/conv_1/biases/Adam"
        string_val: "DS-CNN/conv_1/biases/Adam_1"
        string_val: "DS-CNN/conv_1/weights"
        string_val: "DS-CNN/conv_1/weights/Adam"
        string_val: "DS-CNN/conv_1/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
        string_val: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
        string_val: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
        string_val: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
        string_val: "DS-CNN/fc1/biases"
        string_val: "DS-CNN/fc1/biases/Adam"
        string_val: "DS-CNN/fc1/biases/Adam_1"
        string_val: "DS-CNN/fc1/weights"
        string_val: "DS-CNN/fc1/weights/Adam"
        string_val: "DS-CNN/fc1/weights/Adam_1"
        string_val: "global_step"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 108
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta"
  input: "save/RestoreV2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam"
  input: "save/RestoreV2:1"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:2"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_mean"
  input: "save/RestoreV2:3"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "DS-CNN/conv_1/batch_norm/moving_variance"
  input: "save/RestoreV2:4"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "DS-CNN/conv_1/biases"
  input: "save/RestoreV2:5"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam"
  input: "save/RestoreV2:6"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "DS-CNN/conv_1/biases/Adam_1"
  input: "save/RestoreV2:7"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "DS-CNN/conv_1/weights"
  input: "save/RestoreV2:8"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam"
  input: "save/RestoreV2:9"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "DS-CNN/conv_1/weights/Adam_1"
  input: "save/RestoreV2:10"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
  input: "save/RestoreV2:11"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:12"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:13"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:14"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:15"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases"
  input: "save/RestoreV2:16"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam"
  input: "save/RestoreV2:17"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/biases/Adam_1"
  input: "save/RestoreV2:18"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
  input: "save/RestoreV2:19"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2:20"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2:21"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
  input: "save/RestoreV2:22"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:23"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:24"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:25"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:26"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases"
  input: "save/RestoreV2:27"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam"
  input: "save/RestoreV2:28"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/biases/Adam_1"
  input: "save/RestoreV2:29"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights"
  input: "save/RestoreV2:30"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam"
  input: "save/RestoreV2:31"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "DS-CNN/conv_ds_1/pw_conv/weights/Adam_1"
  input: "save/RestoreV2:32"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_1/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
  input: "save/RestoreV2:33"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:34"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:35"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:36"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:37"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases"
  input: "save/RestoreV2:38"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam"
  input: "save/RestoreV2:39"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/biases/Adam_1"
  input: "save/RestoreV2:40"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
  input: "save/RestoreV2:41"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2:42"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2:43"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
  input: "save/RestoreV2:44"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:45"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:46"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:47"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:48"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases"
  input: "save/RestoreV2:49"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam"
  input: "save/RestoreV2:50"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/biases/Adam_1"
  input: "save/RestoreV2:51"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights"
  input: "save/RestoreV2:52"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam"
  input: "save/RestoreV2:53"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "DS-CNN/conv_ds_2/pw_conv/weights/Adam_1"
  input: "save/RestoreV2:54"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_2/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
  input: "save/RestoreV2:55"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:56"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:57"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:58"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:59"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases"
  input: "save/RestoreV2:60"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam"
  input: "save/RestoreV2:61"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/biases/Adam_1"
  input: "save/RestoreV2:62"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
  input: "save/RestoreV2:63"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2:64"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2:65"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
  input: "save/RestoreV2:66"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:67"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:68"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:69"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:70"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases"
  input: "save/RestoreV2:71"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam"
  input: "save/RestoreV2:72"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/biases/Adam_1"
  input: "save/RestoreV2:73"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights"
  input: "save/RestoreV2:74"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam"
  input: "save/RestoreV2:75"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "DS-CNN/conv_ds_3/pw_conv/weights/Adam_1"
  input: "save/RestoreV2:76"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_3/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
  input: "save/RestoreV2:77"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:78"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:79"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:80"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:81"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases"
  input: "save/RestoreV2:82"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam"
  input: "save/RestoreV2:83"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/biases/Adam_1"
  input: "save/RestoreV2:84"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
  input: "save/RestoreV2:85"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam"
  input: "save/RestoreV2:86"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1"
  input: "save/RestoreV2:87"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/dw_conv/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
  input: "save/RestoreV2:88"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam"
  input: "save/RestoreV2:89"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1"
  input: "save/RestoreV2:90"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
  input: "save/RestoreV2:91"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
  input: "save/RestoreV2:92"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases"
  input: "save/RestoreV2:93"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam"
  input: "save/RestoreV2:94"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/biases/Adam_1"
  input: "save/RestoreV2:95"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights"
  input: "save/RestoreV2:96"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam"
  input: "save/RestoreV2:97"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "DS-CNN/conv_ds_4/pw_conv/weights/Adam_1"
  input: "save/RestoreV2:98"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_ds_4/pw_conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "DS-CNN/fc1/biases"
  input: "save/RestoreV2:99"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam"
  input: "save/RestoreV2:100"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "DS-CNN/fc1/biases/Adam_1"
  input: "save/RestoreV2:101"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "DS-CNN/fc1/weights"
  input: "save/RestoreV2:102"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam"
  input: "save/RestoreV2:103"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "DS-CNN/fc1/weights/Adam_1"
  input: "save/RestoreV2:104"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/fc1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:106"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:107"
  device: "/device:GPU:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@DS-CNN/conv_1/batch_norm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_105"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  device: "/device:GPU:1"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^DS-CNN/conv_1/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_1/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_1/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_1/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_1/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_1/biases/Adam/Assign"
  input: "^DS-CNN/conv_1/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_1/biases/Assign"
  input: "^DS-CNN/conv_1/weights/Adam/Assign"
  input: "^DS-CNN/conv_1/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_1/weights/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_1/pw_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_2/pw_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_3/pw_conv/weights/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/dw_conv/depthwise_weights/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/beta/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_mean/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/batch_norm/moving_variance/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/biases/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/biases/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/biases/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/weights/Adam/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/weights/Adam_1/Assign"
  input: "^DS-CNN/conv_ds_4/pw_conv/weights/Assign"
  input: "^DS-CNN/fc1/biases/Adam/Assign"
  input: "^DS-CNN/fc1/biases/Adam_1/Assign"
  input: "^DS-CNN/fc1/biases/Assign"
  input: "^DS-CNN/fc1/weights/Adam/Assign"
  input: "^DS-CNN/fc1/weights/Adam_1/Assign"
  input: "^DS-CNN/fc1/weights/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
  device: "/device:GPU:1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "Shape_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Shape_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "Shape_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
versions {
  producer: 27
}
